autointent.Dataset
==================

.. py:class:: autointent.Dataset(*args, intents, **kwargs)

   Bases: :py:obj:`dict`\ [\ :py:obj:`str`\ , :py:obj:`datasets.Dataset`\ ]


   Represents a dataset with associated metadata and utilities for processing.

   :param args: Positional arguments to initialize the dataset.
   :param intents: List of intents associated with the dataset.
   :param kwargs: Additional keyword arguments to initialize the dataset.


   .. py:attribute:: label_feature
      :value: 'label'



   .. py:attribute:: utterance_feature
      :value: 'utterance'



   .. py:attribute:: intents


   .. py:property:: multilabel
      :type: bool


      Check if the dataset is multilabel.

      :return: True if the dataset is multilabel, False otherwise.



   .. py:property:: n_classes
      :type: int


      Get the number of classes in the training split.

      :return: Number of classes.



   .. py:method:: from_dict(mapping)
      :classmethod:


      Load a dataset from a dictionary mapping.

      :param mapping: Dictionary representing the dataset.
      :return: Initialized Dataset object.



   .. py:method:: from_json(filepath)
      :classmethod:


      Load a dataset from a JSON file.

      :param filepath: Path to the JSON file.
      :return: Initialized Dataset object.



   .. py:method:: from_hub(repo_id)
      :classmethod:


      Load a dataset from a Hugging Face repository.

      :param repo_id: ID of the Hugging Face repository.
      :return: Initialized Dataset object.



   .. py:method:: to_multilabel()

      Convert dataset labels to multilabel format.

      :return: Self, with labels converted to multilabel.



   .. py:method:: to_dict()

      Convert the dataset splits and intents to a dictionary of lists.

      :return: A dictionary containing dataset splits and intents as lists of dictionaries.



   .. py:method:: to_json(filepath)

      Save the dataset splits and intents to a JSON file.

      :param filepath: The path to the file where the JSON data will be saved.



   .. py:method:: push_to_hub(repo_id, private = False)

      Push dataset splits to a Hugging Face repository.

      :param repo_id: ID of the Hugging Face repository.



   .. py:method:: get_tags()

      Extract unique tags from the dataset's intents.

      :return: List of tags with their associated intent IDs.



   .. py:method:: get_n_classes(split)

      Calculate the number of unique classes in a given split.

      :param split: The split to analyze.
      :return: Number of unique classes.


