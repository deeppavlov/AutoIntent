autointent.context.optimization_info.OptimizationInfo
=====================================================

.. py:class:: autointent.context.optimization_info.OptimizationInfo

   Tracks optimization results, including trials, artifacts, and modules.

   This class provides methods for logging optimization results, retrieving
   the best-performing modules and artifacts, and generating configuration
   for inference nodes.


   .. py:attribute:: artifacts


   .. py:attribute:: trials


   .. py:attribute:: modules


   .. py:method:: log_module_optimization(node_type, module_name, module_params, metric_value, metric_name, artifact, module_dump_dir, module = None)

      Log optimization results for a module.

      :param node_type: Type of the node being optimized.
      :param module_name: Type of the module.
      :param module_params: Parameters of the module for the trial.
      :param metric_value: Metric value achieved by the module.
      :param metric_name: Name of the evaluation metric.
      :param artifact: Artifact generated by the module.
      :param module_dump_dir: Directory where the module is dumped.
      :param module: The module instance, if available.



   .. py:method:: get_best_embedder()

      Retrieve the name of the best embedder from the retriever node.

      :return: Name of the best embedder.



   .. py:method:: get_best_train_scores()

      Retrieve the train scores from the best scorer node.

      :return: Train scores as a numpy array.



   .. py:method:: get_best_validation_scores()

      Retrieve the validation scores from the best scorer node.

      :return: Validation scores as a numpy array.



   .. py:method:: get_best_test_scores()

      Retrieve the test scores from the best scorer node.

      :return: Test scores as a numpy array.



   .. py:method:: get_best_oos_scores(split)

      Retrieve the out-of-scope scores from the best scorer node.

      :param split: The data split for which to retrieve the OOS scores.
          Must be one of "train", "validation", or "test".
      :return: A numpy array containing OOS scores for the specified split,
          or `None` if no OOS scores are available.



   .. py:method:: dump_evaluation_results()

      Dump evaluation results for all nodes.

      :return: Dictionary containing metrics and configurations for all nodes.



   .. py:method:: get_inference_nodes_config(asdict = False)

      Generate configuration for inference nodes based on the best trials.

      :return: List of `InferenceNodeConfig` objects for inference nodes.



   .. py:method:: get_best_modules()

      Retrieve the best modules for all node types.

      :return: Dictionary of the best modules for each node type.


