autointent.modules.decision.ArgmaxDecision
==========================================

.. py:class:: autointent.modules.decision.ArgmaxDecision

   Bases: :py:obj:`autointent.modules.abc.DecisionModule`


   Argmax decision module.

   The ArgmaxDecision is a simple predictor that selects the class with the highest
   score (argmax) for single-label classification tasks.

   :ivar n_classes: Number of classes in the dataset.

   Examples
   --------
   .. testcode::

       from autointent.modules import ArgmaxDecision
       import numpy as np
       predictor = ArgmaxDecision()
       train_scores = np.array([[0.2, 0.8, 0.0], [0.7, 0.1, 0.2]])
       labels = [1, 0]  # Single-label targets
       predictor.fit(train_scores, labels)
       test_scores = np.array([[0.1, 0.5, 0.4], [0.6, 0.3, 0.1]])
       decisions = predictor.predict(test_scores)
       print(decisions)

   .. testoutput::

       [1 0]



   .. py:attribute:: name
      :value: 'argmax'



   .. py:attribute:: n_classes
      :type:  int


   .. py:method:: from_context(context)
      :classmethod:


      Initialize form context.

      :param context: Context



   .. py:method:: fit(scores, labels, tags = None)

      Argmax not fitting anything.

      :param scores: Scores to fit
      :param labels: Labels to fit
      :param tags: Tags to fit
      :raises WrongClassificationError: If the classification is wrong.



   .. py:method:: predict(scores)

      Predict the argmax.

      :param scores: Scores to predict
      :raises InvalidNumClassesError: If the number of classes is invalid.



   .. py:method:: dump(path)

      Dump.

      :param path: Dump path.



   .. py:method:: load(path)

      Load.


